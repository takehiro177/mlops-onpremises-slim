version: '0.1'
services:

######################################################
# DATABASE SERVICE
######################################################
  postgres:
    build: './docker/postgres'
    restart: always
    container_name: postgres
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"
    ports:
      - "32769:5432"
    volumes:
      - ./mnt/postgres/pgdata:/var/lib/postgresql/data/pgdata
      - ./docker/postgres/entrypoint_initdb:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=mlops
      - POSTGRES_PASSWORD=mlops
      - POSTGRES_MULTIPLE_DATABASES=mlops_db, mlflow_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "mlops_db", "-U", "mlops" ]
      timeout: 45s
      interval: 10s
      retries: 10

  adminer:
    image: wodby/adminer:latest
    restart: always
    container_name: adminer
    logging:
      driver: "json-file"
      options:
          max-file: "5"
          max-size: "10m"
    ports:
      - "32767:9000"
    environment:
      - ADMINER_DEFAULT_DB_DRIVER=psql
      - ADMINER_DEFAULT_DB_HOST=postgres
      - ADMINER_DEFAULT_DB_NAME=mlops_db
    healthcheck:
      test: [ "CMD", "nc", "-z", "adminer", "9000" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# AIRFLOW
######################################################

  airflow:
    build: ./docker/airflow
    restart: always
    container_name: airflow
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./mnt/airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ./mnt/airflow/dags:/opt/airflow/dags
      - ./mnt/airflow/logs:/opt/airflow/logs
      - ./mnt/airflow/plugins:/opt/airflow/plugins
      - ./mnt/airflow/feast:/opt/airflow/projects
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10

######################################################
# MLFLOW
######################################################

  mlflow:
    build: ./docker/mlflow
    restart: always
    container_name: mlflow
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./mnt/mlflow:/mlflow
    ports:
      - 5000:5000

######################################################
# FEAST
######################################################

  redis:
    image: redis:5-alpine
    ports:
      - "6379:6379"